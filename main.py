from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.types import InlineKeyboardButton,  InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
import asyncio
from config import BOT_TOKEN
from keyboard import keyboard
from states import Start
from checker import checker

bot = Bot(BOT_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())
loop = asyncio.get_event_loop()


curs = 12.9
nacenka = 1500
dostavka = 1300

@dp.message_handler(commands=["start"], state="*")
async def start_command(message: types.Message):
    global user_id
    user_id = message.from_user.id
    firstname = message.from_user.first_name
    await message.answer_photo(message.from_user.id,
                               text=(open("src/img/Shapka.jpg", "rb"),
                                     f"""
ü§† –ù–∏—Ö–∞–æ, {firstname}!
–ú—ã –ø—Ä—è–º—ã–µ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–∏ Poizon.
–£ –Ω–∞—Å —Å–≤–æ–π —Å–∫–ª–∞–¥ –≤ –ö–∏—Ç–∞–µ, –ø–æ—ç—Ç–æ–º—É –º—ã –º–æ–∂–µ–º –¥–∞–≤–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—Éüî•
–ò –µ—â—ë –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –ø–ª—é—à–µ–∫!
–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏: @Getpoizon_manager

<b><i>‚ùóÔ∏è–¢–æ–ª—å–∫–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è</i></b>
                               """), reply_markup=keyboard.kb_start, parse_mode=types.ParseMode.HTML)


@dp.message_handler(lambda message: message.text == "–°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º", state="*")
async def rasshet_itog(message: types.Message):
    await message.answer(f"""
*–ì–æ—Ç–æ–≤ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –∏–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã?*                        

–ù–∞–ø–∏—à–∏ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É @Getpoizon_manager

–ü—Ä–∏ 
                         """, parse_mode=types.ParseMode.MARKDOWN)


@dp.message_handler(lambda message: message.text == "–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑", state="*")
async def rasshet_itog(message: types.Message):
    await message.answer("–û–∫")


@dp.message_handler(lambda message: message.text == "–†–∞—Åc—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å", state="*")
async def rasshet(message: types.Message):
    global user_id
    user_id = message.from_user.id
    firstname = message.from_user.first_name
    await bot.send_message(message.from_user.id,
                           text=(
                               '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Get Poison. –í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å '))
    await Start.schet.set()


@dp.message_handler(state=Start.schet)
async def rasshet_itog(message: types.Message, state: FSMContext) -> None:
    async with state.proxy() as data:
        data['stoim'] = message.text
        stoim = data['stoim']
        s = ''
        stoim_cny,s = await checker(stoim, s)
        if stoim_cny == -1:
            await bot.send_message(message.from_user.id,
                               text=(s))
            await Start.schet.set()    
        else:                       
            itog = stoim_cny * curs + nacenka + dostavka
            await bot.send_message(message.from_user.id,
                                text=(
                                    '–°—É–º–º–∞ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞  = ' + str(itog)))
            await state.finish()

if __name__ == "__main__":
    executor.start_polling(
        dispatcher=dp, skip_updates=True)
